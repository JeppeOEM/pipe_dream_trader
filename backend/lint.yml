name: fastapi-github-actions-test

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Pull the built Docker image
        run: |
          docker pull soma1337/pipe_dream:latest  # Pull the image from Docker Hub

      - name: Install Docker Compose
        run: |
          # Install Docker Compose (ensure it's installed in the environment)
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check version to confirm successful installation
      - name: Set up Docker Compose
        run: |
          docker-compose -f ./docker-compose.yml up -d  # Start all services defined in docker-compose

      - name: Wait for Database to be ready
        run: |
          until docker-compose exec db pg_isready -U testuser; do
            echo "Waiting for database...";
            sleep 5;
          done

      - name: Run tests with pytest inside the container
        run: |
          docker-compose run \
            -e DATABASE_URL=postgresql://testuser:testpassword@db:5432/testdb \
            <service-name> pytest tests/  # Replace <service-name> with the name of the service in docker-compose.yml that runs your app

      - name: Tear down Docker Compose
        run: |
          docker-compose down
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r backend/sqa-requirements.txt
      - name: Format import with Isort
        working-directory: ./backend/src
        run: |
          isort . 
        continue-on-error: true

      - name: Format with black
        working-directory: ./backend/src
        run: |
          black . --skip-string-normalization 
        continue-on-error: true

      - name: Type-check with mypy
        working-directory: ./backend/src
        run: |
          mypy . 
        continue-on-error: true

      - name: Lint with Pylint
        working-directory: ./backend/src
        run: |
          mypy . 
        continue-on-error: true


