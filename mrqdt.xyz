##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/mrqdt.xyz/dist;

	index index.html index.htm index.nginx-debian.html;

	server_name mrqdt.xyz www.mrqdt.xyz;

	location / {
		try_files $uri /index.html;
	}


    location /api/ {
        proxy_pass http://localhost:8080;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	## Allow CORS from the frontend domain
	# add_header 'Access-Control-Allow-Origin' 'http://mrqdt.xyz';  
	# add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
	# add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
	# add_header 'Access-Control-Allow-Credentials' 'true';

       # Handle OPTIONS request for CORS preflight
	#if ($request_method = 'OPTIONS') {
	#  add_header 'Access-Control-Max-Age' 1728000;  # Cache preflight response for 20 days
	#  add_header 'Content-Type' 'text/plain; charset=UTF-8';
	#  add_header 'Content-Length' 0;
	#  return 204;  # No Content
	#}
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mrqdt.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mrqdt.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = www.mrqdt.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = mrqdt.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 default_server;

	server_name mrqdt.xyz www.mrqdt.xyz;
    return 404; # managed by Certbot




}
