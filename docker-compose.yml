---
services:

  backend:
    image: soma1337/pipe_dream:latest
    # build:
    #   context: ./backend
    volumes:
      - "./backend:/app"
    env_file:
      - "./backend/testenv"
    environment:
      - RTE=$RTE
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - dbnet
    restart: always

  postgres:
    image: postgres:16
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Remapped to avoid conflict with local postgres
    ports:
      - "5435:5432"
    env_file:
      - ".env"
    networks:
      - dbnet
    restart: always

  # timescale:
  #   image: timescale/timescaledb-ha:pg16
  #   volumes:
  #     - timescale_data:/home/postgres/pgdata/data
  #     - ./sql/timescale/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   # remapped because it was conflicting with local postgres
  #   ports:
  #     - "5438:5432"
  #   env_file:
  #     - ".env"
  #   environment:
  #     - RTE=$RTE
  #     - POSTGRES_USER=${TS_POSTGRES_USER}  # Use .env variables
  #     - POSTGRES_PASSWORD=${TS_POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${TS_POSTGRES_DB}
  #     - POSTGRES_HOST=${TS_POSTGRES_HOST}
  #   networks:
  #     - timescalenet
    # command: ["bash", "entrypoint-timescale.sh"]

  # market_data_service:
  #   build:
  #     context: ./market_data_service
  #   env_file:
  #     - ".env"
  #   environment:
  #     - RTE=$RTE
  #     - POSTGRES_USER=${TS_POSTGRES_USER}  # Use .env variables
  #     - POSTGRES_PASSWORD=${TS_POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${TS_POSTGRES_DB}
  #     - POSTGRES_HOST=${TS_POSTGRES_HOST}
  #   volumes:
  #     - "./market_data_service/:/opt/timescale_pull"
  #   depends_on:
  #     - timescale
  #   networks:
  #     - timescalenet

volumes:
  postgres_data:
 # timescale_data:
  node_modules:

networks:
  webnet:
    driver: bridge
  timescalenet:
    driver: bridge
  dbnet:
    driver: bridge
