---
services:
  nginx:
    image: "nginx:latest"
    volumes:
      - "./nginx/:/etc/nginx/conf.d/"
    ports:
      - "8000:8000"
    networks:
      - webnet
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
    volumes:
      - "./backend:/app"
    env_file:
      - "./backend/testenv"
    depends_on:
      - timescale
      - postgres
    networks:
      - dbnet
      - webnet
    restart: always

  postgres:
    image: postgres:16
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5439:5432"  # Remapped to avoid conflict
    env_file:
      - "./backend/testenv"
    networks:
      - dbnet
    restart: always

  timescale:
    image: timescale/timescaledb-ha:pg16
    volumes:
      - timescale_data:/home/postgres/pgdata/data
      - ./sql/timescale/init.sql:/docker-entrypoint-initdb.d/init.sql
    # remapped because it was conflicting with local postgres
    ports:
      - "5438:5432"
    env_file:
      - ".env"
    environment:
      - POSTGRES_USER=${TS_POSTGRES_USER}  # Use .env variables
      - POSTGRES_PASSWORD=${TS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TS_POSTGRES_DB}
      - POSTGRES_HOST=${TS_POSTGRES_HOST}
    networks:
      - dbnet
    # command: ["bash", "entrypoint-timescale.sh"]

  market_data_service:
    build:
      context: ./market_data_service
    env_file:
      - ".env"
    environment:
      - RTE=${RTE}
      - POSTGRES_USER=${TS_POSTGRES_USER}  # Use .env variables
      - POSTGRES_PASSWORD=${TS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TS_POSTGRES_DB}
      - POSTGRES_HOST=${TS_POSTGRES_HOST}
    volumes:
      - "./market_data_service/:/opt/timescale_pull" 
    depends_on:
      - timescale
    networks:
      - dbnet


volumes:
  postgres_data:
  timescale_data:

networks:
  webnet:
    driver: bridge
  dbnet:
    driver: bridge
