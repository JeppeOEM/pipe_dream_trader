---
services:
  nginx:
    image: "nginx:latest"
    volumes:
      - "./nginx/:/etc/nginx/conf.d/"
    ports:
      - "8000:8000"
    networks:
      - webnet
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: Dockerfile

    # build:
    #   context: .
    #   image: soma1337/cryptobackend:latest
    volumes:
      - ".:/app"
    env_file:
      - ".env"
    depends_on:
      - db
    networks:
      - dbnet
      - webnet

  db:
    image: timescale/timescaledb-ha:pg16
    volumes:
      - "db-data:/var/lib/postgresql/data"
    env_file:
      - ".env"
    networks:
      - dbnet

  redis:
    container_name: redis
    image: redis:6.2-alpine
  # called the same as the file with the worker
  # celery_worker:
  #   container_name: celery_worker
  #   build: .
  #   command: celery -A celery_worker.celery worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
  #   depends_on:
  #     - app
  #     - redis
  #
  # flower:
  #   container_name: flower
  #   build: .
  #   command: celery -A celery_worker.celery flower --port=5555
  #   ports:
  #     - 5556:5555
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
  #   depends_on:
  #     - app
  #     - redis
  #     - celery_worker

volumes:
  db-data:

networks:
  webnet:
    driver: bridge
  dbnet:
    driver: bridge
